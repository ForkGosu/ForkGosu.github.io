[{"content":"스터디 함께 잘 해봅시다! 잘 부탁드립니다! ","date":-62135596800,"description":"","objectID":"3976528693a0108357f4928017600865","permalink":"https://forkgosu.github.io/","title":"HOME"},{"content":"\r\u0026amp;nbsp;준비물\rOS환경 : Windows 10 Pro\nVScode Download 폴더를 생성해서 VSCode를 해당위치에서 열어준다 Extension창에서 SFTP검색 후 설치해준다\nF1을 눌러 SFTP: Config를 검색 후 클릭하여 ./vscode/sftp.json을 추가해준다\nsftp.json의 설정을 수정해준다(password항목은 추가해서 적어줬음)\n한번 더 F1을 눌러 SFTP:List All을 클릭해준다\nSFTP리스트에서 설정으로 추가해준 이름을 클릭해준다\n이제 index.php라는 파일을 해당 폴더내에 추가해준뒤 저장한다\n서버에 파일이 잘 추가되었는지 해당 폴더 위치로 가서 확인해준다\n이제 PHP코드 작성에 도움을 줄 수 있는 Extension을 설치해서 사용하면 PHP개발의 질이 올라간다\nPHP Formatter :-\u0026amp;gt; PHP코드 정렬\nFormat HTML in PHP :-\u0026amp;gt; PHP에서 HTML코드 정렬\nPHP Intelephense :-\u0026amp;gt; PHP문법오류 및 설명\nPHP IntelliSense :-\u0026amp;gt; PHP문법 자동완성 지원\n","date":-62135596800,"description":"","objectID":"6ea37e74b570390a197d8710cb51bb08","permalink":"https://forkgosu.github.io/study_support/1/","title":"VSCode_SFTP_설정"},{"content":"\r\u0026amp;nbsp;알림\r왼쪽 메뉴에서 더보기를 클릭해서 해당하는 곳으로 바로 이동 할 수도 있습니다\nVScode_SFTP ","date":-62135596800,"description":"","objectID":"3257a2712678923fd64a3bdb2a5802f7","permalink":"https://forkgosu.github.io/study_support/","title":"_스터디_보충"},{"content":"\r\u0026amp;nbsp;시작\rOS환경 : Windows 10 Pro\nVMware Workstation 17 Player Termius 목차 가상머신 세팅 Termius 세팅 가상머신 세팅 고수여서 직접 APM 을 설치가 가능!\n그러면 직접 다 해도 상관 없음!\n하지만\u0026amp;hellip; 처음이라 너무 어렵다?\n공유해준 가상머신.ova 파일을 VMware Player 에 Import 해주면 된다\n가상머신 Import는 아래와 같이 하면 된다\n오픈을 눌러준다\n이름은 파일이름과 같이 하고 위치는 D디스크에 VMware폴더를 하나 만들어서 설정했다\n이제 Import가 될 때까지 기다린다\n잘 만들어진 가상머신을 실행해서 확인해보자\n가상머신이 멈춘것 같다면 Enter를 눌러주고 (student/student1234)로 로그인\nTermius 세팅 가상머신(우분투)에서 ifconfig 명령어로 아이피를 확인한다 (192.168.x.x 가 내부 아이피)\n처음 Termius를 실행하면 로그인을 해줘야 하는것 같다 로그인 해주자\nNew Host를 클릭하고 ifconfig로 알아냈던 내부아이피와 (student/student1234)를 입력해준다\nSSH로 첫 접속 시 디지털서명으로 등록하겠다고 묻는 이벤트인 것 같은데 다음에 질문 안받기 위해 등록한다\nTermius가 잘 접속 된다면 해당 화면이 보인다\n한번 SFTP도 확인해본다(Termius 자랑)\n이제 왼쪽 로컬 폴더에서 오른쪽 원격서버(가상머신)으로 파일을 보낼 수 있게 되었다\n","date":-62135596800,"description":"","objectID":"5457948779a969ca96f6129ac43ea94e","permalink":"https://forkgosu.github.io/study_week_01/1/","title":"(1) 환경설정"},{"content":"\r\u0026amp;nbsp;요약\r요약 웹서버 : 딸깍(전달) 웹브라우저 : 그려야한다 요약 : 파이썬으로 웹서버 실행, URL(프로토콜,아이피,포트번호,파일경로)에 대해 목차 파이썬 웹서버 실행 URL에 대해 파이썬 웹서버 실행 $ cd webBasic/ -\u0026amp;gt; webBasic이라는 폴더로 이동 $ sudo python3 -m http.server 80 -\u0026amp;gt; 파이썬을 사용해서 80번 포트를 http서버로 열기 -\u0026amp;gt; sudo는 비밀번호를 입력해야함 (student1234) 잘 실행 된다면 해당 화면이 보인다\nURL에 대해 URL경로\n[Protocol]://[Domain or IP]:[Port]/[File Path]\n-\u0026amp;gt; http://[내부IP]/[파일위치]\n-\u0026amp;gt; http://192.168.12.128/test.txt\nURL을 이용해서 브라우저로 들어가보자 파일위치에서는 ..같은 상위 폴더로 돌아가는 경로는 URL에 안먹힘\n-\u0026amp;gt; 루트경로까지 돌아갈수 있다면 그건 서버입장에서 자살행위\n캐시 : 한번 실행했던 브라우저 정보는 클라이언트가 저장해서 사용하여 자원 아끼려함\n-\u0026amp;gt; 때문에 서버에서 업데이트가 일어나면 정확한 정보를 위해 캐시 삭제 필요\n웹서버 : 그냥 데이터만줌\n웹브라우저 : 데이트를 참고해서 이쁘게 그리는 녀석 착한녀석\n이런 느낌일까?\n웰논포트 : 서버통신에서의 사회적 약속\n다른 포트 사용해도 되지만 대부분 사람들은 이렇게 사용한다\nhttp -\u0026amp;gt; 80\nhttps -\u0026amp;gt; 443\nssh -\u0026amp;gt; 22\npython으로 webServer포트번호 다르게 사용해보기\n$ sudo python3 -m http.server 9999 -\u0026amp;gt; 9999번 포트로 http서버로 열면 더이상 포트생략 불가 -\u0026amp;gt; http://192.168.12.128/test.txt 이렇게 80포트 생략해서 URL입력했던 걸\n-\u0026amp;gt; http://192.168.12.128:9999/test.txt 이렇게 9999포트 명시해서 URL입력 해야 함\nNAT\n-\u0026amp;gt; 왜 인터넷망에있는 서버를 빌려야 하는지 답이 나올것이다\n기본적으로 index파일을 전달(이것도 약속)\n","date":-62135596800,"description":"","objectID":"de5d4d0722fc65394b8086d307b706ad","permalink":"https://forkgosu.github.io/study_week_01/2/","title":"(2) 웹 서버의 역활"},{"content":"\r\u0026amp;nbsp;요약\r요약 WEB \u0026amp;lt;-\u0026amp;gt; WAS \u0026amp;lt;-\u0026amp;gt; DB WEB : 전달밖에 모르는 바보 WAS : WEB이 PHP같은 동적 페이지는 WAS로 넘겨서 처리후에 클라이언트로 전달 요약 : WAS가 있는 도커를 실행 후 VScode-SFTP 연결해서 삶의 질을 올리자 - VScode_SFTP_세팅_바로가기 목차 WAS가 있는 도커 실행 백엔드 코드란? WAS가 있는 도커 실행 $ cd ~/webDev -\u0026amp;gt; 홈 디렉토리에 있는 webDev폴더로 이동 $ sudo docker ps -a -\u0026amp;gt; 도커 실행중 인지 확인 $ sudo ./dockerCMD \u0026amp;amp; -\u0026amp;gt; WAS가 있는 도커 백그라운드로 실행 실행이 된다면 해당화면과 같이 나오고 멈춘것 같다면 엔터를 누르면 됨 이제 허접하게 Web서버만 있지않고 WAS가 있어서 PHP처리 가능\n이제 \u0026amp;ldquo;~/webDev/webApp\u0026amp;rdquo; 경로는 웹서버 루트로서 폴더에 파일을 업로드하면 웹서버가 알아서 처리\nVScode - sftp 세팅하면 삶의 질이 달라진다고 함(그래서 설정해봄)\n설정방법 : VScode_SFTP_세팅_바로가기\n백엔드 코드란? 백엔드 코드는 클라이언트에서 안보임\nWAS가 서버에서 처리하고 나서 클라이언트로 전달했기 때문\nPHP(백엔드 언어)\n$_GET[\u0026amp;rsquo;name\u0026amp;rsquo;] : GET Method로 전달받은 파라미터 파라미터 : 사용자가 웹서버에게 전달하는 데이터\nGET : 파라미터를 URL에 ?뒤에 붙혀서 전달\nFront-End VS Back-End\nFront-End : 브라우저가 실행하는 코드(HTML, CSS, Javascript\u0026amp;hellip;)\nBack-End : 서버가 실행하는 코드 (PHP, ASP, JSP\u0026amp;hellip;)\n","date":-62135596800,"description":"","objectID":"d60168b41853eadb7596827f9e66a5be","permalink":"https://forkgosu.github.io/study_week_01/3/","title":"(3) 동적 페이지"},{"content":"\r\u0026amp;nbsp;요약\r요약 파라미터 : 사용자가 서버에 전달하는 데이터 파라미터 전달법 종류 2가지 (GET/POST) GET : 파라미터를 URL에 ?뒤에 붙혀서 전달 POST : Request Body에 붙혀서 전달 form태그를 이용해서 다른 method(페이지)로 파라미터 전달 목차 PHP 파일 만들기 만든 파일로 실제 테스트 PHP 파일 만들기 이제 vscode를 열어서 php파일들을 만들어 준다 login.php 파라미터 보낼 파일 내용\nGET 방식\u0026amp;lt;br\u0026amp;gt; \u0026amp;lt;form method=\u0026amp;#34;GET\u0026amp;#34; action=\u0026amp;#34;login_proc.php\u0026amp;#34;\u0026amp;gt; \u0026amp;lt;input type=\u0026amp;#34;text\u0026amp;#34; name=\u0026amp;#34;id\u0026amp;#34; placeholder=\u0026amp;#34;User ID\u0026amp;#34;/\u0026amp;gt; \u0026amp;lt;input type=\u0026amp;#34;password\u0026amp;#34; name=\u0026amp;#34;pass\u0026amp;#34; placeholder=\u0026amp;#34;User Password\u0026amp;#34;/\u0026amp;gt; \u0026amp;lt;input type=\u0026amp;#34;submit\u0026amp;#34; value=\u0026amp;#34;login\u0026amp;#34;/\u0026amp;gt; \u0026amp;lt;/form\u0026amp;gt; POST 방식\u0026amp;lt;br\u0026amp;gt; \u0026amp;lt;form method=\u0026amp;#34;POST\u0026amp;#34; action=\u0026amp;#34;login_proc.php\u0026amp;#34;\u0026amp;gt; \u0026amp;lt;input type=\u0026amp;#34;text\u0026amp;#34; name=\u0026amp;#34;id\u0026amp;#34; placeholder=\u0026amp;#34;User ID\u0026amp;#34;/\u0026amp;gt; \u0026amp;lt;input type=\u0026amp;#34;password\u0026amp;#34; name=\u0026amp;#34;pass\u0026amp;#34; placeholder=\u0026amp;#34;User Password\u0026amp;#34;/\u0026amp;gt; \u0026amp;lt;input type=\u0026amp;#34;submit\u0026amp;#34; value=\u0026amp;#34;login\u0026amp;#34;/\u0026amp;gt; \u0026amp;lt;/form\u0026amp;gt; login_proc.php, 파라미터 받을 파일 내용 GET 방식\u0026amp;lt;br\u0026amp;gt; \u0026amp;lt;?php echo $_GET[\u0026amp;#39;id\u0026amp;#39;]; ?\u0026amp;gt;\u0026amp;lt;br\u0026amp;gt; \u0026amp;lt;?php echo $_GET[\u0026amp;#39;pass\u0026amp;#39;]; ?\u0026amp;gt;\u0026amp;lt;br\u0026amp;gt; \u0026amp;lt;br\u0026amp;gt; POST 방식\u0026amp;lt;br\u0026amp;gt; \u0026amp;lt;?php echo $_POST[\u0026amp;#39;id\u0026amp;#39;]; ?\u0026amp;gt;\u0026amp;lt;br\u0026amp;gt; \u0026amp;lt;?php echo $_POST[\u0026amp;#39;pass\u0026amp;#39;]; ?\u0026amp;gt;\u0026amp;lt;br\u0026amp;gt; GET : 파라미터를 URL에 ?뒤에 붙혀서 전달\nPOST : Request Body에 붙혀서 전달\nform : 안에있는 input태그의 name을 파라미터로 전달\nmethod : 파라미터 전달 방식(GET,POST)\naction : 파라미터를 받을 페이지 설정\n만든 파일로 실제 테스트 내부아이피를 통해 login.php 파일로 접근한 뒤 GET방식에 ip,pass를 입력한 뒤 login클릭 GET방식은 URL의 \u0026amp;lsquo;?\u0026amp;lsquo;뒤에 정보가 그대로 노출되는 것을 볼 수 있다 내부아이피를 통해 login.php 파일로 접근한 뒤 POST방식에 ip,pass를 입력한 뒤 login클릭 URL에 정보 노출이 되지 않는다! 파라미터는 Request Body에 저장되어있다고 함 두짤 요약\nlogin.php\nlogin_proc.php\n","date":-62135596800,"description":"","objectID":"92f7c45dcddfe79322752a8e646fbeb5","permalink":"https://forkgosu.github.io/study_week_01/4/","title":"(4) PHP 맛보기"},{"content":"\r\u0026amp;nbsp;과제\r과제 복습(웹 서버 이해) 간이 로그인 페이지 만들기 (DB연결X)\n-\u0026amp;gt; admin / admin1234 라고 입력했을때 로그인 시켜주는 페이지 로그인 페이지 이쁘게 만들기 (CSS / Bootstrap) 결과 화면 해당 CSS는 타 블로그에서 긁어왔다\n소스 코드 폴더 경로 및 파일 다운로드\nlogin.css 다운로드 login_proc.php 다운로드 login.php 다운로드 login.css @import url(\u0026amp;#34;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\u0026amp;#34;); * { box-sizing: border-box; } body { font-family: \u0026amp;#34;Montserrat\u0026amp;#34;, sans-serif; margin: 0; padding: 0; } .wrapper { width: 100%; height: 100vh; display: flex; justify-content: center; align-items: center; background: #ebecf0; overflow: hidden; } .container { border-radius: 10px; box-shadow: -5px -5px 10px #fff, 5px 5px 10px #babebc; position: absolute; width: 768px; min-height: 480px; overflow: hidden; } form { background: #ebecf0; display: flex; flex-direction: column; padding: 0 50px; height: 100%; justify-content: center; align-items: center; } form input { background: #eee; padding: 16px; margin: 8px 0; width: 85%; border: 0; outline: none; border-radius: 20px; box-shadow: inset 7px 2px 10px #babebc, inset -5px -5px 12px #fff; } button { border-radius: 20px; border: none; outline: none; font-size: 12px; font-weight: bold; padding: 15px 45px; margin: 14px; letter-spacing: 1px; text-transform: uppercase; cursor: pointer; transition: transform 80ms ease-in; } .form_btn { box-shadow: -5px -5px 10px #fff, 5px 5px 8px #babebc; } .form_btn:active { box-shadow: inset 1px 1px 2px #babebc, inset -1px -1px 2px #fff; } .overlay_btn { background-color: #ff4b2b; color: #fff; box-shadow: -5px -5px 10px #ff6b3f, 5px 5px 8px #bf4b2b; } .sign-in-container { position: absolute; left: 0; width: 50%; height: 100%; transition: all 0.5s; } .sign-up-container { position: absolute; left: 0; width: 50%; height: 100%; opacity: 0; transition: all 0.5s; } .overlay-left { display: flex; flex-direction: column; padding: 0 50px; justify-content: center; align-items: center; position: absolute; right: 0; width: 50%; height: 100%; opacity: 0; …","date":-62135596800,"description":"","objectID":"49f1ce8e812bc45d91082a10ad02666f","permalink":"https://forkgosu.github.io/study_week_01/5/","title":"과제"},{"content":"\r\u0026amp;nbsp;알림\r왼쪽 메뉴에서 더보기를 클릭해서 해당하는 곳으로 바로 이동 할 수도 있습니다\n(1) 환경설정 (2) 웹 서버의 역활 (3) 동적 페이지 (4) PHP 맛보기 과제 ","date":-62135596800,"description":"","objectID":"c0d39596e69e42bda822d42e091a38b0","permalink":"https://forkgosu.github.io/study_week_01/","title":"스터디_01주차"}]